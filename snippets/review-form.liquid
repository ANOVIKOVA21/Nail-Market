<script src="{{ 'reviews.js' | asset_url }}" defer></script>
{% style %}
input[type="range"].rating__stars-input {
  --s: 40px; /* control the size*/
  width: 200px;
  --_c: #ccc 50%, #444 0;
  height: var(--s);
  aspect-ratio: attr(max type(<integer>));
  padding-inline: calc(var(--s)/2);
  box-sizing: border-box;
  mask: 
    url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><path d='M50 5 L79 95 L2 40 L98 40 L21 95 Z'/></svg>") 0/var(--s) var(--_m,);
  appearance: none;
  cursor: pointer;
}
input[type="range" i].rating__stars-input::-webkit-slider-thumb{
  width: 1px;
  border-image: 
    conic-gradient(at calc(50% + var(--s)/2),var(--_c))
    fill 0//var(--s) calc(20*var(--s));
  appearance: none;
}
input[type="range"].rating__stars-input::-moz-range-thumb {
  width: 1px;
  border-image: 
    conic-gradient(at calc(50% + var(--s)/2),var(--_c))
    fill 0//var(--s) calc(20*var(--s));
  appearance: none;
}
input[type="range"].rating__stars-input:focus-visible {
  outline: 2px solid #000;
  outline-offset: -2px;
  --_m:,conic-gradient(from 90deg at 2px 2px,#0000 25%,#000 0) 0 0/calc(100% - 2px) calc(100% - 2px);
}

@supports not (d:attr(d type(*))) {
  input[type="range"].rating {
    aspect-ratio: 5; /* max */
  }
}

.review-form__media-inputs {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
}

.review__file-input:hover {
  border-color: #999;
}

.review__file-input {
  position: relative;
}

.review__file-input img {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  top: 0;
  left: 0;
}

.review__file-input .svg-wrapper {
  z-index: 1;
  opacity: 0.7;
}

.review__file-input.has-image .svg-wrapper {
  display: none;
}

.review__file-input .remove-image {
  position: absolute;
  top: 4px;
  right: 4px;
  background: rgba(0,0,0,0.7);
  color: white;
  border: none;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 2;
  opacity: 0;
  transition: all 0.2s ease;
  font-size: 14px;
  line-height: 1;
  padding: 0;
  margin: 0;
  box-shadow: 0 1px 3px rgba(0,0,0,0.3);
}

.review__file-input .remove-image:hover {
  background: rgba(255,0,0,0.8);
  transform: scale(1.1);
}

.review__file-input.has-image .remove-image {
  opacity: 1; /* Always show on mobile */
}

/* Mobile styles */
@media (max-width: 767px) {
  .review__file-input .remove-image {
    width: 20px;
    height: 20px;
    font-size: 12px;
    top: 2px;
    right: 2px;
  }
  
  .review-form__media-inputs {
    gap: 8px;
    justify-content: center;
  }
}

/* Desktop hover effects */
@media (hover: hover) {
  .review__file-input.has-image .remove-image {
    opacity: 0;
  }
  
  .review__file-input.has-image:hover .remove-image {
    opacity: 1;
  }
}


.review__file-input img[alt]:after {  
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #fff;
  font-family: 'Helvetica';
  font-weight: 300;
  line-height: 2;  
  text-align: center;
  content: attr(alt);
}

.review__file-input.has-image:hover .remove-image {
  opacity: 1;
}
{% endstyle %}

<div class="review-form__box">
  <div class="review-form__header">
    <div class="review-form__back-button">
      {{- 'icon-left-arrow.svg' | inline_asset_content -}}
    </div>
    <h1 class="customer__title">{{ 'customer.reviews.form.title' | t }}</h1>
  </div>
  <form class="review-form" enctype="multipart/form-data" method="post" action="/apps/api/reviews">
    <a href="" class="review-form__product">
      <img
        src=""
        alt=""
        class="review-form__product-img"
        width="64"
        height="64"
      >
      <p class="review-form__product-title"></p>
    </a>
    <input type="hidden" name="productId" >
    <label class="account__form-label" for="reviews-rating">
      {{- 'customer.reviews.form.rating_title' | t }}
      <input type="range" min="1" value="3" max="5" class="rating__stars-input" name="review_rating" id="review_rating">
    </label>
    <label class="account__form-label" for="review-title">
      {{- 'customer.reviews.form.review_title' | t }}
      <input
        type="text"
        class="account__form-input"
        id="review-title"
        name="review_title"
        required
        placeholder="{{ 'customer.reviews.form.add_title' | t }}"
    ></label>
    <label class="account__form-label" for="review-description">
      {{- 'customer.reviews.form.review_description' | t }}
      <textarea
        class="account__form-input"
        id="review-description"
        name="review_description"
        rows="1"
        required
        placeholder="{{ 'customer.reviews.form.add_title' | t }}"
      ></textarea>
    </label>

    <div>
      <p class="review-form__media-text">{{ 'customer.reviews.form.add_media' | t }}</p>
      <div class="review-form__media-inputs">
        <label class="review__file-input" for="media-1">
          <span class="svg-wrapper">
            {{- 'icon-download.svg' | inline_asset_content -}}
          </span>
          <img class="image-preview" id="preview-1" src="" alt="">
          <button type="button" class="remove-image" data-input="media-1" data-preview="preview-1">×</button>
          <input type="file" name="images" id="media-1" accept="image/*" hidden>
        </label>
        <label class="review__file-input" for="media-2">
          <span class="svg-wrapper">
            {{- 'icon-download.svg' | inline_asset_content -}}
          </span>
          <img class="image-preview" id="preview-2" src="" alt="">
          <button type="button" class="remove-image" data-input="media-2" data-preview="preview-2">×</button>
          <input type="file" name="images" id="media-2" accept="image/*" hidden>
        </label>
        <label class="review__file-input" for="media-3">
          <span class="svg-wrapper">
            {{- 'icon-download.svg' | inline_asset_content -}}
          </span>
          <img class="image-preview" id="preview-3" src="" alt="">
          <button type="button" class="remove-image" data-input="media-3" data-preview="preview-3">×</button>
          <input type="file" name="images" id="media-3" accept="image/*" hidden>
        </label>
        <label class="review__file-input" for="media-4">
          <span class="svg-wrapper">
            {{- 'icon-download.svg' | inline_asset_content -}}
          </span>
          <img class="image-preview" id="preview-4" src="" alt="">
          <button type="button" class="remove-image" data-input="media-4" data-preview="preview-4">×</button>
          <input type="file" name="images" id="media-4" accept="image/*" hidden>
        </label>
      </div>
    </div>
    <button type="submit" class="button button-dark review-form__submit">
      {{ 'customer.reviews.form.submit' | t }}
    </button>
  </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Handle file selection and preview
  document.querySelectorAll('.review-form input[type="file"]').forEach(input => {
    input.addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (!file) return;
      
      const previewId = 'preview-' + this.id.split('-')[1];
      const previewElement = document.getElementById(previewId);
      const parentLabel = this.closest('.review__file-input');
      
      if (file.type.startsWith('image/')) {
        const reader = new FileReader();
        reader.onload = function(e) {
          previewElement.src = e.target.result;
          parentLabel.classList.add('has-image');
        }
        reader.readAsDataURL(file);
      } else if (file.type.startsWith('video/')) {
        // For videos, we'll just show a thumbnail (this would need more complex handling)
        previewElement.src = 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><rect width="100" height="100" fill="%23eee"/><path d="M40 30 L70 50 L40 70 Z" fill="%23aaa"/></svg>';
        parentLabel.classList.add('has-image');
      }
    });
  });
  
  // Handle remove image button
  document.querySelectorAll('.remove-image').forEach(button => {
    button.addEventListener('click', function(e) {
      e.stopPropagation();
      const inputId = this.getAttribute('data-input');
      const previewId = this.getAttribute('data-preview');
      
      document.getElementById(inputId).value = '';
      document.getElementById(previewId).src = '';
      this.closest('.review__file-input').classList.remove('has-image');
    });
  });
});
</script>